% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modp_elliptic.R
\name{ecAddModp}
\alias{ecAddModp}
\title{Addition in mod p Elliptic Curves}
\usage{
ecAddModp(b, c, modulus, p1 = c(NA, NA), p2 = c(NA, NA))
}
\arguments{
\item{b}{A bigz or integer representing the coefficient b in the equation of the curve.}

\item{c}{A bigz or integer representing the coefficient c in the equation of the curve.}

\item{modulus}{The modulus of the curve (integer or bigz).}

\item{p1}{A length 2 integer or bigz vector, representing a point on the curve.}

\item{p2}{A length 2 integer or bigz vector, representing a point on the curve.}
}
\value{
A length 2 bigz vector, representing the sum p1 + p2.
}
\description{
Adds two points on the mod p elliptic curve y^2 = x^3 + bx + c. Uses the Addition Law
given on page 352 of [Trappe]. All points on elliptic curves are represented as length
two bigz vectors: the point at infinity is represented as \code{c(NA,NA)}. While \code{p1}
and \code{p2} are assumed to be valid points on the elliptic curve (not checked), the program
should return a warning (using the \code{warning} command) if any of the required inverses
in the addition rule fail to exist, returning the value that failed to be invertible.
}
\examples{
ecAddModp(4, 4, 5, c(1,2), c(4,3)) # see page 353
ecAddModp(4, 4, 2773, c(1,3), c(1,3)) # see pp. 353-4
ecAddModp(4, 4, 2773, c(1771,705), c(1,3)) # see pp. 356-7
# Should return a warning message (or two messages):
# Warning messages:
# 1: In ecAddModp(4, 4, 2773, c(1771, 705), c(1, 3)) :
#   -1770 is not invertible mod 2773
# 2: In inv.bigz((x2 - x1), modulus) :
#   inv(x,m) returning NA as x has no inverse modulo m
}

