% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modp_elliptic.R
\name{ecPowModp}
\alias{ecPowModp}
\title{Efficient "exponentiation" in mod p elliptic curves}
\usage{
ecPowModp(b, c, modulus, P, n)
}
\arguments{
\item{b}{A bigz or integer representing the coefficient b in the equation of the curve.}

\item{c}{A bigz or integer representing the coefficient c in the equation of the curve.}

\item{modulus}{The modulus of the curve (bigz or integer).}

\item{P}{A length 2 integer or bigz vector, representing a point on the curve.}

\item{n}{A bigz or integer representing the "exponent".}
}
\value{
A length 2 bigz vector, representing the "power" nP.
}
\description{
Given a point \code{P} on an elliptic curve mod \code{modulus} and an integer/bigz \code{n},
computes the "power" nP. (Since elliptic curves form an additive group, we express "powers"
as integer multiples.) Does so using repeated "squaring" (doubling). (See the QPower function
in the notes.)
}
\examples{
ecPowModp(3, 45, 8831, c(4,11), 8) # see p. 364 (this is kG)
library(gmp)
ecPowModp(3, 45, 8831, c(4,11), as.bigz("2349089023472938409283490823")) # 6863 449
}

